package com.dynalektric.model;

import java.util.HashMap;

public class FluxDensityWKgMap {
    HashMap<Double, Double> crno_map = new HashMap<>();
    HashMap<Double, Double> m4_map = new HashMap<>();
    HashMap<Double, Double> moh_map = new HashMap<>();
    public FluxDensityWKgMap() {
        crno_map.put(0.600, 0.450);
        crno_map.put(0.625, 0.475);
        crno_map.put(0.650, 0.500);
        crno_map.put(0.675, 0.525);
        crno_map.put(0.700, 0.550);
        crno_map.put(0.725, 0.575);
        crno_map.put(0.750, 0.600);
        crno_map.put(0.775, 0.625);
        crno_map.put(0.800, 0.650);
        crno_map.put(0.825, 0.675);
        crno_map.put(0.850, 0.725);
        crno_map.put(0.875, 0.765);
        crno_map.put(0.900, 0.800);
        crno_map.put(0.925, 0.825);
        crno_map.put(0.950, 0.850);
        crno_map.put(0.975, 0.900);
        crno_map.put(1.000, 0.950);
        crno_map.put(1.025, 1.000);
        crno_map.put(1.050, 1.050);
        crno_map.put(1.075, 1.100);
        crno_map.put(1.100, 1.150);
        crno_map.put(1.125, 1.200);
        crno_map.put(1.150, 1.250);
        crno_map.put(1.175, 1.300);
        crno_map.put(1.200, 1.350);
        crno_map.put(1.225, 1.425);
        crno_map.put(1.250, 1.500);
        crno_map.put(1.275, 1.550);
        crno_map.put(1.300, 1.600);
        crno_map.put(1.325, 1.675);
        crno_map.put(1.350, 1.750);
        crno_map.put(1.375, 1.825);
        crno_map.put(1.400, 1.900);
        crno_map.put(1.425, 1.975);
        crno_map.put(1.450, 2.050);
        crno_map.put(1.475, 2.150);
        crno_map.put(1.500, 2.250);
        crno_map.put(1.525, 2.350);
        crno_map.put(1.550, 2.450);
        crno_map.put(1.575, 2.450);
        crno_map.put(1.600, 2.450);
        crno_map.put(1.625, 2.450);
        crno_map.put(1.650, 2.450);
        crno_map.put(1.675, 2.450);
        crno_map.put(1.700, 2.450);
        crno_map.put(1.725, 2.450);
        crno_map.put(1.750, 2.450);


        m4_map.put(0.600, 0.135);
        m4_map.put(0.625, 0.150);
        m4_map.put(0.650, 0.160);
        m4_map.put(0.675, 0.170);
        m4_map.put(0.700, 0.180);
        m4_map.put(0.725, 0.190);
        m4_map.put(0.750, 0.200);
        m4_map.put(0.775, 0.218);
        m4_map.put(0.800, 0.235);
        m4_map.put(0.825, 0.258);
        m4_map.put(0.850, 0.260);
        m4_map.put(0.875, 0.275);
        m4_map.put(0.900, 0.290);
        m4_map.put(0.925, 0.310);
        m4_map.put(0.950, 0.330);
        m4_map.put(0.975, 0.345);
        m4_map.put(1.000, 0.360);
        m4_map.put(1.025, 0.380);
        m4_map.put(1.050, 0.400);
        m4_map.put(1.075, 0.420);
        m4_map.put(1.100, 0.440);
        m4_map.put(1.125, 0.460);
        m4_map.put(1.150, 0.480);
        m4_map.put(1.175, 0.495);
        m4_map.put(1.200, 0.510);
        m4_map.put(1.225, 0.535);
        m4_map.put(1.250, 0.560);
        m4_map.put(1.275, 0.580);
        m4_map.put(1.300, 0.600);
        m4_map.put(1.325, 0.625);
        m4_map.put(1.350, 0.650);
        m4_map.put(1.375, 0.675);
        m4_map.put(1.400, 0.700);
        m4_map.put(1.425, 0.730);
        m4_map.put(1.450, 0.760);
        m4_map.put(1.475, 0.795);
        m4_map.put(1.500, 0.830);
        m4_map.put(1.525, 0.865);
        m4_map.put(1.550, 0.900);
        m4_map.put(1.575, 0.950);
        m4_map.put(1.600, 1.000);
        m4_map.put(1.625, 1.060);
        m4_map.put(1.650, 1.120);
        m4_map.put(1.675, 1.185);
        m4_map.put(1.700, 1.250);
        m4_map.put(1.725, 1.325);
        m4_map.put(1.750, 1.400);

        moh_map.put(0.600, 0.110);
        moh_map.put(0.625, 0.120);
        moh_map.put(0.650, 0.130);
        moh_map.put(0.675, 0.140);
        moh_map.put(0.700, 0.150);
        moh_map.put(0.725, 0.160);
        moh_map.put(0.750, 0.170);
        moh_map.put(0.775, 0.185);
        moh_map.put(0.800, 0.195);
        moh_map.put(0.825, 0.210);
        moh_map.put(0.850, 0.220);
        moh_map.put(0.875, 0.230);
        moh_map.put(0.900, 0.240);
        moh_map.put(0.925, 0.255);
        moh_map.put(0.950, 0.270);
        moh_map.put(0.975, 0.285);
        moh_map.put(1.000, 0.300);
        moh_map.put(1.025, 0.310);
        moh_map.put(1.050, 0.320);
        moh_map.put(1.075, 0.335);
        moh_map.put(1.100, 0.350);
        moh_map.put(1.125, 0.370);
        moh_map.put(1.150, 0.390);
        moh_map.put(1.175, 0.405);
        moh_map.put(1.200, 0.420);
        moh_map.put(1.225, 0.440);
        moh_map.put(1.250, 0.460);
        moh_map.put(1.275, 0.475);
        moh_map.put(1.300, 0.490);
        moh_map.put(1.325, 0.505);
        moh_map.put(1.350, 0.520);
        moh_map.put(1.375, 0.540);
        moh_map.put(1.400, 0.560);
        moh_map.put(1.425, 0.580);
        moh_map.put(1.450, 0.600);
        moh_map.put(1.475, 0.625);
        moh_map.put(1.500, 0.650);
        moh_map.put(1.525, 0.675);
        moh_map.put(1.550, 0.700);
        moh_map.put(1.575, 0.730);
        moh_map.put(1.600, 0.760);
        moh_map.put(1.625, 0.790);
        moh_map.put(1.650, 0.820);
        moh_map.put(1.675, 0.860);
        moh_map.put(1.700, 0.900);
        moh_map.put(1.725, 0.950);
        moh_map.put(1.750, 1.000);

    }

    public Double getWKgValue(Double fluxDensity , String coreType){
        if(coreType.equals("CRNO-35")) return crno_map.get(fluxDensity);
        if(coreType.equals("M4-27")) return m4_map.get(fluxDensity);
        if(coreType.equals("MOH-23")) return moh_map.get(fluxDensity);
        else return 0.0;
    }
}
